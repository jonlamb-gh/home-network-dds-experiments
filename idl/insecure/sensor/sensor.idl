/**
 * @file insecure/sensor/sensor.idl
 * @brief TODO
 *
 */

#include <common.idl>

const unsigned long SENSOR_STRING_LEN = 255;

const unsigned long SENSOR_DATA_ARRAY_MAX = 32;

enum sensor_data_value_kind
{
    SENSOR_DATA_VALUE_ULONG,
    SENSOR_DATA_VALUE_LONG,
    SENSOR_DATA_VALUE_DOUBLE,
    SENSOR_DATA_VALUE_BOOL
};

union sensor_data_value switch(sensor_data_value_kind)
{
    case SENSOR_DATA_VALUE_ULONG:
        unsigned long value_ulong;
    case SENSOR_DATA_VALUE_LONG:
        long value_long;
    case SENSOR_DATA_VALUE_DOUBLE:
        double value_double;
    case SENSOR_DATA_VALUE_BOOL:
        boolean value_bool;
};

struct sensor_measurement
{
    unsigned long long sample_time_utc; // UTC microseconds
    double sample_time_delta; // seconds
    sensor_data_value data;
};

struct sensor_info
{
    unsigned long sensor_id; // @key
    string<SENSOR_STRING_LEN> name;
    string<SENSOR_STRING_LEN> description;
    string<SENSOR_STRING_LEN> sensor_type;
    string<SENSOR_STRING_LEN> controlled_by;
    string<SENSOR_STRING_LEN> output_type;
    string<SENSOR_STRING_LEN> units;

    // TODO
    // properties/attributes (enum units, etc) ?
};

struct sensor_info_req
{
    unsigned long sensor_id; // @key
};

struct sensor_data
{
    unsigned long sensor_id; // @key
    sensor_measurement measurement;
};

struct sensor_data_array
{
    unsigned long sensor_id; // @key
    sequence<sensor_measurement, SENSOR_DATA_ARRAY_MAX> measurements;
};

